// Code generated by MockGen. DO NOT EDIT.
// Source: gomock/reporter/reporter.go

// Package mockreporter is a generated GoMock package.
package mockreporter

import (
	gomock "github.com/golang/mock/gomock"
	reporter "github.com/rainbowmango/goexpertprogrammingsourcecode/gomock/reporter"
	reflect "reflect"
)

// MockWeatherReporter is a mock of WeatherReporter interface
type MockWeatherReporter struct {
	ctrl     *gomock.Controller
	recorder *MockWeatherReporterMockRecorder
}

// MockWeatherReporterMockRecorder is the mock recorder for MockWeatherReporter
type MockWeatherReporterMockRecorder struct {
	mock *MockWeatherReporter
}

// NewMockWeatherReporter creates a new mock instance
func NewMockWeatherReporter(ctrl *gomock.Controller) *MockWeatherReporter {
	mock := &MockWeatherReporter{ctrl: ctrl}
	mock.recorder = &MockWeatherReporterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockWeatherReporter) EXPECT() *MockWeatherReporterMockRecorder {
	return m.recorder
}

// Report mocks base method
func (m *MockWeatherReporter) Report(city string) reporter.Weather {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Report", city)
	ret0, _ := ret[0].(reporter.Weather)
	return ret0
}

// Report indicates an expected call of Report
func (mr *MockWeatherReporterMockRecorder) Report(city interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Report", reflect.TypeOf((*MockWeatherReporter)(nil).Report), city)
}
